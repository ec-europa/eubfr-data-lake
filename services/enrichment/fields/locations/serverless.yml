service: enrichment-fields-locations

plugins:
  - serverless-webpack

custom:
  esIndex: ${self:provider.stage}-projects
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
    packager: yarn
  eubfrEnvironment: ${opt:eubfr_env, file(../../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}
  queueName: ${self:provider.stage}-enrichment-saver-backlog

package:
  individually: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, file(../../../../config.json):stage, env:EUBFR_STAGE, 'dev'}
  region: ${opt:region, file(../../../../config.json):region, env:EUBFR_AWS_REGION, 'eu-central-1'}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  iamRoleStatements:
    - Effect: "Allow"
      Action: "sqs:*"
      Resource: "arn:aws:sqs:${self:provider.region}:*:*"
    - Effect: "Allow"
      Action: "es:*"
      Resource: "arn:aws:es:${self:provider.region}:*:domain/*"

functions:
  onEnrichRecordRequested:
    handler: src/events/onEnrichRecordRequested.handler
    name: ${self:provider.stage}-${self:service}-onEnrichRecordRequested
    memorySize: 256
    timeout: 300
    environment:
      REGION: ${self:provider.region}
      STAGE: ${self:provider.stage}
      QUEUE_NAME: ${self:custom.queueName}
      API:
        Fn::ImportValue: ${self:custom.eubfrEnvironment}:resources-elasticsearch:PublicEndpoint
      INDEX: ${self:custom.esIndex}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-onEnrichRecordRequested"
          topicName: ${self:provider.stage}-onEnrichRecordRequested

service: ingestion-etl-inforegio-xml

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
    packager: yarn
  eubfrEnvironment: ${opt:eubfr_env, file(../../../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}
  bucketName: ${file(../../../../../resources/harmonized-storage/serverless.yml):custom.bucketName}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 60
  stage: ${opt:stage, file(../../../../../config.json):stage, 'dev'}
  region: ${opt:region, file(../../../../../config.json):region, 'eu-central-1'}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:PutObject"
       Resource:
         Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - ${self:custom.bucketName}
             - "/*"
    # Allow queueing messages to the DLQ https://docs.aws.amazon.com/lambda/latest/dg/dlq.html
    - Effect: 'Allow'
      Action:
        - sqs:SendMessage
      Resource: '*'

functions:
  parseXML:
    handler: src/events/onParseXML.handler
    name: ${self:provider.stage}-${self:service}-parseXML
    memorySize: 1024
    environment:
      BUCKET: ${self:custom.bucketName}
      REGION: ${self:provider.region}
      STAGE: ${self:provider.stage}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-etl-inforegio-xml"
          topicName: ${self:provider.stage}-etl-inforegio-xml

resources:
  Resources:
    ParseXMLLambdaFunction:
      Type: "AWS::Lambda::Function"
      Properties:
        DeadLetterConfig:
          TargetArn:
            Fn::ImportValue: ${self:provider.stage}:ingestion-dead-letter-queue:LambdaFailureQueue
    SNSTopicINFOREGIOXML:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:provider.stage}-etl-inforegio-xml
        DisplayName: INFOREGIO XML ETL
    SNSTopicINFOREGIOXMLPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            -
              Sid: Allow-IngestionManager-Publish
              Action:
                - sns:Publish
              Effect: Allow
              Resource:
                Fn::Join:
                  - ""
                  -
                    - "arn:aws:sns:"
                    - Ref: "AWS::Region"
                    - ":"
                    - Ref: "AWS::AccountId"
                    - ":${self:provider.stage}-etl-inforegio-xml"
              Principal:
                AWS:
                  Fn::Join:
                    - ""
                    -
                      - "arn:aws:sts::"
                      - Ref: "AWS::AccountId"
                      - ":assumed-role/ingestion-manager-${self:provider.stage}-"
                      - Ref: "AWS::Region"
                      - "-lambdaRole/${self:provider.stage}-ingestion-manager-onCreate"
        Topics:
          - Ref: SNSTopicINFOREGIOXML

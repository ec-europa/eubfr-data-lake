service: ingestion-manager

plugins:
  - serverless-webpack

custom:
  metaIndex: ${self:provider.stage}-meta
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
    packager: yarn
  eubfrEnvironment: ${opt:eubfr_env, file(../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, file(../../../config.json):stage, 'dev'}
  region: ${opt:region, file(../../../config.json):region, 'eu-central-1'}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  environment:
    API:
      Fn::ImportValue: ${self:custom.eubfrEnvironment}:resources-elasticsearch:PrivateEndpoint
    INDEX: ${self:custom.metaIndex}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
  iamRoleStatements:
    # http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-aws-integrations.html?shortFooter=true#es-aws-integrations-s3-lambda-es-authorizations
    - Effect: "Allow"
      Action: "es:*"
      Resource: "arn:aws:es:${self:provider.region}:*:domain/*"
    - Effect: "Allow"
      Action:
        - "sns:Publish"
        - "sns:Subscribe"
      Resource:
        # `arn:aws:sns:${REGION}:${accountId}:${STAGE}-etl-${producer}-${extension}`
        - Fn::Join:
          - ""
          -
            - "arn:aws:sns:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":${self:provider.stage}-*"

functions:
  onCreate:
    handler: src/events/onObjectCreated.handler
    name: ${self:provider.stage}-${self:service}-onCreate
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-object-created"
          topicName: ${self:provider.stage}-object-created
  onObjectRemoved:
    handler: src/events/onObjectRemoved.handler
    name: ${self:provider.stage}-${self:service}-onObjectRemoved
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-object-removed"
          topicName: ${self:provider.stage}-object-removed

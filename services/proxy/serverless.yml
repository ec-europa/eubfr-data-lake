service: proxy-elasticsearch

plugins:
  - serverless-webpack
  - serverless-offline #serverless-offline needs to be last in the list

custom:
  esIndex: ${self:provider.stage}-projects
  publicDomain: ${self:custom.eubfrEnvironment}-public
  webpackIncludeModules: true
  eubfrEnvironment: ${opt:eubfr_env, file(../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}
  API:
    Fn::ImportValue: ${self:custom.eubfrEnvironment}:resources-elasticsearch:PublicEndpoint
  INDEX: ${self:custom.esIndex}
  serverless-offline:
    port: 4000

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, file(../../../config.json):stage, 'dev'}
  region: ${opt:region, file(../../../config.json):region, 'eu-central-1'}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  iamRoleStatements:
    - Effect: "Allow"
      Action: "es:*"
      Resource: "arn:aws:es:eu-central-1:*:domain/tmp/*"
      # Resource: "arn:aws:es:${self:provider.region}:*:domain/${self:custom.publicDomain}/*"

functions:
  proxy-elasticsearch:
    handler: src/api/proxy.handler
    name: ${self:provider.stage}-${self:service}-proxy-elasticsearch
    events:
      - http:
          authorizer: aws_iam
          cors: true
          method: delete
          path: proxy
      - http:
          authorizer: aws_iam
          cors: true
          method: put
          path: proxy

resources:
  Outputs:
    ProxyEndpoint:
      Description: The endpoint for the elasticsearch proxy
      Value:
        Fn::Join:
          - ''
          - - Ref: ApiGatewayRestApi
            - '.execute-api.'
            - ${self:provider.region}
            - '.amazonaws.com/'
            - ${self:provider.stage}
      Export:
        Name: "${self:provider.stage}:${self:service}:ProxyEndpoint"

service: storage-objects

plugins:
  - serverless-webpack
  - serverless-offline #serverless-offline needs to be last in the list

custom:
  webpackIncludeModules: true
  eubfrEnvironment: ${opt:eubfr_env, file(../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}
  serverless-offline:
    port: 4000

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, file(../../../config.json):stage, 'dev'}
  region: ${opt:region, file(../../../config.json):region, 'eu-central-1'}
  environment:
    REGION: ${self:provider.region}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  versionFunctions: false
  iamRoleStatements:
  -  Effect: "Allow"
     Action:
       - "s3:*"
     Resource: "*"    

functions:
  upsert-objects:
    handler: src/upsert.handler
    memorySize: 128
    events:
      - http:
          path: storage/signed_url
          method: put
          private: true
          cors: true
      - http:
          path: storage/signed_url
          method: post
          private: true
          cors: true

resources:
  Resources:
    ObjectCreatedTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:provider.stage}-object-created
    ObjectRemovedTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:provider.stage}-object-removed
    SourceBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: eubfr-${self:provider.stage}
        NotificationConfiguration:
          TopicConfigurations:
            -
              Event: s3:ObjectCreated:*
              Topic:
                Ref: ObjectCreatedTopic
            -
              Event: s3:ObjectRemoved:*
              Topic:
                Ref: ObjectRemovedTopic
    SourceBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: SourceBucket
        PolicyDocument:
          Statement:
            -
              Action:
                - "s3:GetObject"
              Effect: "Allow"
              Resource:
                Fn::Join:
                  - ""
                  -
                    - "arn:aws:s3:::"
                    -
                      Ref: SourceBucket
                    - "/*"
              Principal: "*"
    ObjectEventPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            -
              Sid: AllowBucketToPushNotificationEffect
              Effect: Allow
              Principal:
                Service: s3.amazonaws.com
              Action: sns:Publish
              Resource: "*"
        Topics:
          -
            Ref: ObjectCreatedTopic
          -
            Ref: ObjectRemovedTopic

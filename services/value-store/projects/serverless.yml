service: value-store-projects

plugins:
  - serverless-webpack

custom:
  esIndex: ${self:provider.stage}-projects
  webpackIncludeModules: true
  eubfrEnvironment: ${opt:eubfr_env, file(../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, file(../../../config.json):stage, 'dev'}
  region: ${opt:region, file(../../../config.json):region, 'eu-central-1'}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  iamRoleStatements:
    # http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-aws-integrations.html?shortFooter=true#es-aws-integrations-s3-lambda-es-authorizations
    - Effect: "Allow"
      Action: "es:*"
      Resource: "arn:aws:es:${self:provider.region}:*:domain/*"
    - Effect: "Allow"
      Action: "kinesis:*"
      Resource: "*"

functions:
  onObjectCreated:
    handler: src/events/onObjectCreated.handler
    name: ${self:provider.stage}-${self:service}-onObjectCreated
  # Max out memory and timeout because this function is vital for queueing data to Kinesis data streams.
    timeout: 300
    memorySize: 3000
    environment:
      API:
        Fn::ImportValue: ${self:custom.eubfrEnvironment}:resources-elasticsearch:PublicEndpoint
      INDEX: ${self:custom.esIndex}
      REGION: ${self:provider.region}
      STAGE: ${self:provider.stage}
      KINESIS_STREAM: ${self:provider.stage}-${self:service}-stream
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-harmonized-object-created"
          topicName: ${self:provider.stage}-harmonized-object-created
  onObjectRemoved:
    handler: src/events/onObjectRemoved.handler
    name: ${self:provider.stage}-${self:service}-onObjectRemoved
    environment:
      API:
        Fn::ImportValue: ${self:custom.eubfrEnvironment}:resources-elasticsearch:PublicEndpoint
      INDEX: ${self:custom.esIndex}
      REGION: ${self:provider.region}
      STAGE: ${self:provider.stage}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-harmonized-object-removed"
          topicName: ${self:provider.stage}-harmonized-object-removed
  onKinesisData:
    handler: src/events/onKinesisData.handler
    name: ${self:provider.stage}-${self:service}-onKinesisData
    environment:
      API:
        Fn::ImportValue: ${self:custom.eubfrEnvironment}:resources-elasticsearch:PublicEndpoint
      INDEX: ${self:custom.esIndex}
      REGION: ${self:provider.region}
      STAGE: ${self:provider.stage}
    events:
      - stream:
          type: kinesis
          enabled: true
          batchSize: 400
          startingPosition: LATEST
          arn:
            Fn::GetAtt: [ KinesisDataStream, Arn ]

resources:
  Resources:

    KinesisDataStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:provider.stage}-${self:service}-stream
        ShardCount: 5

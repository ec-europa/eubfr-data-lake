service: value-store-projects

plugins:
  - serverless-dynamodb-autoscaling
  - serverless-webpack

custom:
  webpackIncludeModules: true
  eubfrEnvironment: ${opt:eubfr_env, file(../../../config.json):eubfr_env, env:EUBFR_ENV, 'dev'}
  DYNAMODB_TABLE: ${self:provider.stage}-projects
  capacities:
    - table: ProjectsDynamoDbTable  # DynamoDB Resource
      read:
        minimum: 5        # Minimum read capacity
        maximum: 1000     # Maximum read capacity
        usage: 0.75       # Targeted usage percentage
      write:
        minimum: 5        # Minimum write capacity
        maximum: 100      # Maximum write capacity
        usage: 0.5        # Targeted usage percentage

package:
  individually: true

provider:
  name: aws
  runtime: nodejs6.10
  timeout: 60
  stage: ${opt:stage, file(../../../config.json):stage, 'dev'}
  region: ${opt:region, file(../../../config.json):region, 'eu-central-1'}
  deploymentBucket:
    name: eubfr-${self:custom.eubfrEnvironment}-deploy
  stackTags:
    ENV: ${self:custom.eubfrEnvironment}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.DYNAMODB_TABLE}"

functions:
  onObjectCreated:
    handler: src/handler.onObjectCreated
    name: ${self:provider.stage}-${self:service}-onObjectCreated
    environment:
      TABLE: ${self:custom.DYNAMODB_TABLE}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-harmonized-object-created"
          topicName: ${self:provider.stage}-harmonized-object-created
  onObjectRemoved:
    handler: src/handler.onObjectRemoved
    name: ${self:provider.stage}-${self:service}-onObjectRemoved
    environment:
      TABLE: ${self:custom.DYNAMODB_TABLE}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              -
                - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":${self:provider.stage}-harmonized-object-removed"
          topicName: ${self:provider.stage}-harmonized-object-removed

resources:
  Resources:
    ProjectsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.DYNAMODB_TABLE}
        AttributeDefinitions:
          -
            AttributeName: computed_key
            AttributeType: S
          -
            AttributeName: project_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: computed_key
            KeyType: HASH
          -
            AttributeName: project_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
